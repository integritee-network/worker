name: Build, Test, Clippy

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - 'sdk-v[0-9]+.[0-9]+.[0-9]+-*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master
      - 'sdk-v[0-9]+.[0-9]+.[0-9]+-*'

env:
  CARGO_TERM_COLOR: always
  LOG_DIR: logs
  BUILD_CONTAINER_NAME: integritee_worker_enclave_test

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-22.04
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  build-test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - flavor_id: sidechain
            mode: sidechain
          - flavor_id: offchain-worker
            mode: offchain-worker
          - flavor_id: teeracle
            mode: teeracle
          - flavor_id: sidechain-evm
            mode: sidechain
            additional_features: evm

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          driver: docker-container

      - name: Build Worker & Run Cargo Test
        env:
          DOCKER_BUILDKIT: 1
        run: >
          docker build -t integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }}
          --target deployed-worker
          --build-arg WORKER_MODE_ARG=${{ matrix.mode }} --build-arg ADDITIONAL_FEATURES_ARG=${{ matrix.additional_features }}
          -f build.Dockerfile .

      - name: Build CLI client
        env:
          DOCKER_BUILDKIT: 1
        run: >
          docker build -t integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }}
          --target deployed-client
          --build-arg WORKER_MODE_ARG=${{ matrix.mode }} --build-arg ADDITIONAL_FEATURES_ARG=${{ matrix.additional_features }}
          -f build.Dockerfile .

      - run: docker images --all

      - name: Test Enclave # cargo test is not supported in the enclave, see: https://github.com/apache/incubator-teaclave-sgx-sdk/issues/232
        run: docker run --name ${{ env.BUILD_CONTAINER_NAME }} integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }} test --all

      - name: Export worker image(s)
        run: |
          docker image save integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }} | gzip > integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz
          docker image save integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }} | gzip > integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz

      - name: Upload worker image
        uses: actions/upload-artifact@v3
        with:
          name: integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz
          path: integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz

      - name: Upload CLI client image
        uses: actions/upload-artifact@v3
        with:
          name: integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz
          path: integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz

  clippy:
    runs-on: ubuntu-22.04
    container: "integritee/integritee-dev:0.1.13"
    steps:
      - uses: actions/checkout@v3
      - name: init rust
        # enclave is not in the same workspace
        run: rustup show && cd enclave-runtime && rustup show

      - name: Clippy default features
        run: cargo clippy -- -D warnings
      - name: Enclave # Enclave is separate as it's not in the workspace
        run: cd enclave-runtime && cargo clippy -- -D warnings

      - name: Clippy with EVM feature
        run: |
          cargo clippy --features evm -- -D warnings
          cd enclave-runtime && cargo clippy --features evm -- -D warnings

      - name: Clippy with Sidechain feature
        run: |
          cargo clippy --features sidechain -- -D warnings
          cd enclave-runtime && cargo clippy --features sidechain -- -D warnings

      - name: Clippy with Teeracle feature
        run: |
          cargo clippy --features teeracle -- -D warnings
          cd enclave-runtime && cargo clippy --features teeracle -- -D warnings

      - name: Clippy with Offchain-worker feature
        run: |
          cargo clippy --features offchain-worker -- -D warnings
          cd enclave-runtime && cargo clippy --features offchain-worker -- -D warnings

      - name: Fail-fast; cancel other jobs
        if: failure()
        uses: andymckay/cancel-action@0.3

  fmt:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: init rust
        run: rustup show

      - name: Worker & Client
        run: cargo fmt --all -- --check
      - name: Enclave # Enclave is separate as it's not in the workspace
        run: cd enclave-runtime && cargo fmt --all -- --check

      - name: Install taplo
        run: cargo install taplo-cli --locked
      - name: Cargo.toml fmt
        run: taplo fmt --check

      - name: Fail-fast; cancel other jobs
        if: failure()
        uses: andymckay/cancel-action@0.3

  integration-tests:
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    needs: build-test
    env:
      WORKER_IMAGE_TAG: integritee-worker:dev
      CLIENT_IMAGE_TAG: integritee-cli:dev
      COINMARKETCAP_KEY: ${{ secrets.COINMARKETCAP_KEY }}
      TEERACLE_INTERVAL_SECONDS: 10

    strategy:
      fail-fast: false
      matrix:
        include:
          - test: M6
            flavor_id: sidechain
            demo_name: demo-indirect-invocation
          - test: M8
            flavor_id: sidechain
            demo_name: demo-direct-call
          - test: Sidechain
            flavor_id: sidechain
            demo_name: demo-sidechain
          - test: M6
            flavor_id: offchain-worker
            demo_name: demo-indirect-invocation
          - test: Teeracle
            flavor_id: teeracle
            demo_name: demo-teeracle
          - test: Teeracle
            flavor_id: teeracle
            demo_name: demo-teeracle-generic
          - test: Benchmark
            flavor_id: sidechain
            demo_name: sidechain-benchmark
          - test: EVM
            flavor_id: sidechain-evm
            demo_name: demo-smart-contract

    steps:
      - uses: actions/checkout@v3

      - name: Set env
        run: |
          echo "FLAVOR_ID=${{ matrix.flavor_id }}" >> $GITHUB_ENV

      - name: Download Worker Image
        uses: actions/download-artifact@v3
        with:
          name: integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz
          path: .

      - name: Download CLI client Image
        uses: actions/download-artifact@v3
        with:
          name: integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz
          path: .

      - name: Load Worker & Client Images
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker image load --input integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz
          docker image load --input integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }}.tar.gz
          docker images --all

      - name: Re-name Image Tags
        run: |
          docker tag integritee-worker-${{ matrix.flavor_id }}-${{ github.sha }} ${{ env.WORKER_IMAGE_TAG }}
          docker tag integritee-cli-client-${{ matrix.flavor_id }}-${{ github.sha }} ${{ env.CLIENT_IMAGE_TAG }}
          docker images --all

      - name: Integration Test ${{ matrix.test }}-${{ matrix.flavor_id }}
        run: |
          cd docker
          docker compose -f docker-compose.yml -f ${{ matrix.demo_name }}.yml up ${{ matrix.demo_name }} --no-build --exit-code-from ${{ matrix.demo_name }}

      - name: Stop docker containers
        run: |
          cd docker
          docker compose -f docker-compose.yml -f ${{ matrix.demo_name }}.yml stop

      - name: Collect Docker Logs
        continue-on-error: true
        if: always()
        uses: jwalton/gh-docker-logs@v2
        with:
          #images: '${{ env.WORKER_IMAGE_TAG }},${{ env.CLIENT_IMAGE_TAG }}'
          tail: all
          dest: ./${{ env.LOG_DIR }}

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs-${{ matrix.test }}-${{ matrix.flavor_id }}
          path: ./${{ env.LOG_DIR }}

  release:
    name: Draft Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    needs: [build-test, integration-tests]
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3

      - name: Download Integritee Service
        uses: actions/download-artifact@v3
        with:
          name: integritee-worker-sidechain-${{ github.sha }}
          path: integritee-worker-tmp

      - name: Download Integritee Client
        uses: actions/download-artifact@v3
        with:
          name: integritee-client-sidechain-${{ github.sha }}
          path: integritee-client-tmp

      - name: Download Enclave Signed
        uses: actions/download-artifact@v3
        with:
          name: enclave-signed-sidechain-${{ github.sha }}
          path: enclave-signed-tmp

      - name: Move service binaries
        run: mv integritee-worker-tmp/integritee-service ./integritee-demo-validateer

      - name: Move service client binaries
        run: mv integritee-client-tmp/integritee-cli ./integritee-client

      - name: Move service client binaries
        run: mv enclave-signed-tmp/enclave.signed.so ./enclave.signed.so

      - name: Create required package.json
        run: test -f package.json || echo '{}' >package.json

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .

      - name: Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: true
          files: |
            integritee-client
            integritee-demo-validateer
            enclave.signed.so
