name: Build, Test, Clippy

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  WORKER_BIN: substratee-worker
  CLIENT_BIN: substratee-client
  ENCLAVE_BIN: enclave.signed.so
  LOG_DIR: log

jobs:
#  build-test:
#    runs-on: ubuntu-latest
#    container: "scssubstratee/substratee_dev:1804-2.12-1.1.3-001"
#    steps:
#      - uses: actions/checkout@v2
#      - name: init-rust-target
#        run: rustup target add wasm32-unknown-unknown
#      - name: Cache Rust Dependecies
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#            enclave/target
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#      - name: Build
#        run:  SGX_MODE=SW make
#      - name: Test Worker & Client
#        run: cargo test
#      - name: Test Enclave # cargo test is not supported, see: https://github.com/apache/incubator-teaclave-sgx-sdk/issues/232
#        run: |
#          cd bin
#          ./substratee-worker test -u
#
#      # Todo: #REBRAND path names
#      - name: Upload worker
#        uses: actions/upload-artifact@v2
#        with:
#          name: integritee-worker-${{ github.sha }}
#          path: bin/substratee-worker
#
#      - name: Upload client
#        uses: actions/upload-artifact@v2
#        with:
#          name: integritee-client-${{ github.sha }}
#          path: bin/substratee-client
#
#      - name: Upload enclave
#        uses: actions/upload-artifact@v2
#        with:
#          name: enclave-signed-${{ github.sha }}
#          path: bin/enclave.signed.so
#
#  clippy:
#    runs-on: ubuntu-latest
#    container: "scssubstratee/substratee_dev:1804-2.12-1.1.3-001"
#    steps:
#      - uses: actions/checkout@v2
#      - name: init-rust
#        run: |
#          rustup component add clippy
#          rustup target add wasm32-unknown-unknown
#      - name: Cache Rust Dependecies
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#            enclave/target
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#      - name: Worker & Client
#        run: cargo clippy -- -D warnings
#      - name: Enclave # Enclave is separate as it's not in the workspace
#        run: cd enclave && cargo clippy -- -D warnings

  integration-tests:
    runs-on: ubuntu-latest
#    needs: build-test
    container: "scssubstratee/substratee_dev:1804-2.12-1.1.3-001"
    env:
      BIN_DIR: bin
    steps:
      - uses: actions/checkout@v2

      # we can't use the `actions/setup-python@v2` due to cross compiling issues with
      # ubuntu 18.04 and python > 3.6, but we need >3.6 for our scripts.
      - name: Set up Python
        run: |
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt install python3.7 -y
          python3.7 --version
#      - name: Download Worker
#        uses: actions/download-artifact@v2
#        with:
#          name: integritee-worker-${{ github.sha }}
#          path: ${{ env.BIN_DIR }}
#
#      - name: Download Client
#        uses: actions/download-artifact@v2
#        with:
#          name: integritee-client-${{ github.sha }}
#          path: ${{ env.BIN_DIR }}
#
#      - name: Download Enclave
#        uses: actions/download-artifact@v2
#        with:
#          name: enclave-signed-${{ github.sha }}
#          path: ${{ env.BIN_DIR }}

      - name: Download Worker
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build_and_test.yml
          run_id: 1026618919
          name: integritee-worker-4962a95442cd23b8516162ab394c94eae6d8e10c
          path: ${{ env.BIN_DIR }}

      - name: Download Client
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build_and_test.yml
          run_id: 1026618919
          name: integritee-client-4962a95442cd23b8516162ab394c94eae6d8e10c
          path: ${{ env.BIN_DIR }}

      - name: Download Enclave
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build_and_test.yml
          run_id: 1026618919
          name: enclave-signed-4962a95442cd23b8516162ab394c94eae6d8e10c
          path: ${{ env.BIN_DIR }}

      - name: Download integritee-node
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          name: integritee-node-skip-ias-check
          # in fact this action should download the latest artifact, but sometimes fails. Then we need to
          # set the `run_id` to force a download of an updated binary.
          run_id: 1026142211
          path: node
          repo: integritee-network/integritee-node

      - name: Prepare working directory
        run: |
          mkdir -p ${{ env.LOG_DIR}}
          chmod +x node/integritee-node
          cd ${{ env.BIN_DIR }}
          chmod +x ${{ env.WORKER_BIN }}
          chmod +x ${{ env.CLIENT_BIN }}
          chmod +x ${{ env.ENCLAVE_BIN }}

      - name: "Setup Keys"
        env:
          KEY: ${{ secrets.IAS_PRIMARY_KEY }}
          SPID: ${{ secrets.IAS_SPID }}
        run: |
          cd ${{ env.BIN_DIR }}
          echo "${{ env.KEY }}" > key.txt
          echo "$$ {{ env.SPID }}" > spid.txt

      - name: Run local setup
        run: |
          touch ${{ env.LOG_DIR}}/local-setup.log
          ./local-setup/launch.py local-setup/github-action-config.json 2>&1 | tee ${{ env.LOG_DIR}}/local-setup.log &
          sleep 30

      - name: "M8: Demo direct"
        # the change the symbolic link which points to the target/release... folder
        run: |
          touch ${{ env.LOG_DIR}}/demo_direct_1.log
          touch ${{ env.LOG_DIR}}/demo_direct_2.log
          cd client
          ln -sf ../${{ env.BIN_DIR }}/${{ env.CLIENT_BIN }} substratee-client
          ./demo_direct_call.sh -p 9944 -P 2000 -t first 2>&1 | tee ${{ env.LOG_DIR}}/demo_direct_1.log
          ./demo_direct_call.sh -p 9944 -P 2000 -t second 2>&1 | tee ${{ env.LOG_DIR}}/demo_direct_2.log

      - name: "M6: Demo shielding/unshielding"
        run: |
          touch ${{ env.LOG_DIR}}/demo_shielding_1.log
          touch ${{ env.LOG_DIR}}/demo_shielding_2.log
          cd client
          ./demo_shielding_unshielding.sh -p 9944 -P 2000 -t first  2>&1 | tee ${{ env.LOG_DIR}}/demo_shielding_1.log
          ./demo_shielding_unshielding.sh -p 9944 -P 3000 -t second 2>&1 | tee ${{ env.LOG_DIR}}/demo_shielding_2.log

      - name: Upload logs
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: log



# If you want to debug ci and you don't want to build the binaries, you can replace the downloas abo
#
#      - name: Download Worker
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          github_token: ${{secrets.GITHUB_TOKEN}}
#          workflow: build_and_test.yml
#          run_id: 1023030553
#          name: integritee-worker-<Github-Sha-of-that-run>
#          path: ${{ env.BIN_DIR }}
#
#      - name: Download Client
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          github_token: ${{secrets.GITHUB_TOKEN}}
#          workflow: build_and_test.yml
#          run_id: 1023030553
#          name: integritee-client-<Github-Sha-of-that-run>
#          path: ${{ env.BIN_DIR }}
#
#      - name: Download Enclave
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          github_token: ${{secrets.GITHUB_TOKEN}}
#          workflow: build_and_test.yml
#          run_id: 1023030553
#          name: enclave-signed-<Github-Sha-of-that-run>
#          path: ${{ env.BIN_DIR }}