[workspace]

members = [
    "app-libs/oracle",
    "app-libs/sgx-runtime",
    "app-libs/stf",
    "cli",
    "core/direct-rpc-server",
    "core/offchain-worker-executor",
    "core/parentchain/block-import-dispatcher",
    "core/parentchain/block-importer",
    "core/parentchain/indirect-calls-executor",
    "core/parentchain/light-client",
    "core/parentchain/parentchain-crate",
    "core/rest-client",
    "core/rpc-client",
    "core/rpc-server",
    "core/tls-websocket-server",
    "core-primitives/attestation-handler",
    "core-primitives/import-queue",
    "core-primitives/component-container",
    "core-primitives/enclave-api",
    "core-primitives/enclave-api/ffi",
    "core-primitives/enclave-metrics",
    "core-primitives/extrinsics-factory",
    "core-primitives/hashing",
    "core-primitives/networking-utils",
    "core-primitives/node-api",
    "core-primitives/node-api/api-client-extensions",
    "core-primitives/node-api/api-client-types",
    "core-primitives/node-api/factory",
    "core-primitives/node-api/metadata",
    "core-primitives/node-api/metadata-provider",
    "core-primitives/nonce-cache",
    "core-primitives/ocall-api",
    "core-primitives/primitives-cache",
    "core-primitives/rpc",
    "core-primitives/settings",
    "core-primitives/sgx/crypto",
    "core-primitives/sgx/io",
    "core-primitives/sgx-runtime-primitives",
    "core-primitives/stf-executor",
    "core-primitives/stf-interface",
    "core-primitives/stf-primitives",
    "core-primitives/stf-state-handler",
    "core-primitives/stf-state-observer",
    "core-primitives/storage",
    "core-primitives/substrate-sgx/environmental",
    "core-primitives/substrate-sgx/externalities",
    "core-primitives/substrate-sgx/sp-io",
    "core-primitives/teerex-storage",
    "core-primitives/test",
    "core-primitives/time-utils",
    "core-primitives/top-pool",
    "core-primitives/top-pool-author",
    "core-primitives/types",
    "core-primitives/utils",
    "service",
    "sidechain/block-composer",
    "sidechain/block-verification",
    "sidechain/consensus/aura",
    "sidechain/consensus/common",
    "sidechain/consensus/slots",
    "sidechain/fork-tree",
    "sidechain/peer-fetch",
    "sidechain/primitives",
    "sidechain/rpc-handler",
    "sidechain/sidechain-crate",
    "sidechain/state",
    "sidechain/validateer-fetch",
]

[patch."https://github.com/apache/teaclave-sgx-sdk.git"]
sgx_alloc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_crypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_libc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_rand = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tcrypto = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_trts = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tstd = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_types = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_ucrypto = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_urts = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }

#[patch."https://github.com/integritee-network/sgx-runtime"]
#sgx-runtime = { path = "../sgx-runtime/runtime"}
#sp-io = { path = "../sgx-runtime/substrate-sgx/sp-io"}
#sgx-externalities = { path = "../sgx-runtime/substrate-sgx/externalities"}

#[patch."https://github.com/integritee-network/integritee-node"]
#my-node-runtime = { package = "integritee-node-runtime", git = "https://github.com/integritee-network//integritee-node", branch = "ab/integrate-pallet-teerex-refactoring" }

#[patch."https://github.com/scs/substrate-api-client"]
#substrate-api-client = { path = "../../scs/substrate-api-client" }
#substrate-client-keystore = { path = "../../scs/substrate-api-client/client-keystore" }

#[patch."https://github.com/integritee-network/pallets.git"]
#pallet-claims = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#pallet-enclave-bridge = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#pallet-teerex = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#pallet-sidechain = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#sgx-verify = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#pallet-teeracle = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#test-utils = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#claims-primitives = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#enclave-bridge-primitives = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#teerex-primitives = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#teeracle-primitives = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }
#common-primitives = { git = "https://github.com/integritee-network//pallets", branch = "ab/shard-config-upgradability-2" }

#[patch."https://github.com/integritee-network/http_req"]
#http_req = {path = '..//http_req' }
