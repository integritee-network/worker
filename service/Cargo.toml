[package]
name = "integritee-service"
version = "0.12.1"
authors = ["Integritee AG <hello@integritee.network>"]
build = "build.rs"
edition = "2021"

[dependencies]
async-trait = "0.1.50"
base58 = "0.2"
clap = { version = "2.33", features = ["yaml"] }
dirs = "3.0.2"
env_logger = "0.9"
futures = "0.3"
hex = "0.4.3"
jsonrpsee = { version = "0.2.0", features = ["client", "ws-server", "macros"] }
lazy_static = "1.4.0"
log = "0.4"
parking_lot = "0.12.1"
parse_duration = "2.1.1"
prometheus = { version = "0.13.0", features = ["process"] }
regex = "1.9.5"
scale-info = { version = "2.0.1", default-features = false, features = ["derive"] }
serde = "1.0"
serde_derive = "1.0"
serde_json = "1.0"
thiserror = "1.0"
tokio = { version = "1.6.1", features = ["full"] }
warp = "0.3"


# ipfs
ipfs-api = "0.11.0"

codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
primitive-types = { version = "0.12.1", default-features = false, features = ["codec"] }

sgx_crypto_helper = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_types = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }

# local
itc-parentchain = { path = "../core/parentchain/parentchain-crate" }
itc-rest-client = { path = "../core/rest-client" }
itc-rpc-client = { path = "../core/rpc-client" }
itc-rpc-server = { path = "../core/rpc-server" }
itp-api-client-types = { path = "../core-primitives/node-api/api-client-types" }
itp-enclave-api = { path = "../core-primitives/enclave-api" }
itp-enclave-metrics = { path = "../core-primitives/enclave-metrics" }
itp-node-api = { path = "../core-primitives/node-api" }
itp-settings = { path = "../core-primitives/settings" }
itp-storage = { path = "../core-primitives/storage" }
itp-types = { path = "../core-primitives/types" }
itp-utils = { path = "../core-primitives/utils" }
its-consensus-slots = { path = "../sidechain/consensus/slots" }
its-peer-fetch = { path = "../sidechain/peer-fetch" }
its-primitives = { path = "../sidechain/primitives" }
its-rpc-handler = { path = "../sidechain/rpc-handler" }
its-storage = { path = "../sidechain/storage" }

# scs / integritee

my-node-runtime = { package = "integritee-node-runtime", git = "https://github.com/integritee-network/integritee-node.git", branch = "sdk-v0.12.0-polkadot-v0.9.42" }
#my-node-runtime = { package = "integritee-runtime", git = "https://github.com/integritee-network/parachain.git", tag = "1.6.2" }
sgx-verify = { git = "https://github.com/integritee-network/pallets.git", branch = "sdk-v0.12.0-polkadot-v0.9.42" }
# `default-features = false` to remove the jsonrpsee dependency.
enclave-bridge-primitives = { git = "https://github.com/integritee-network/pallets.git", branch = "sdk-v0.12.0-polkadot-v0.9.42" }
# disable unsupported jsonrpcsee
substrate-api-client = { default-features = false, features = ["std", "sync-api"], git = "https://github.com/scs/substrate-api-client.git", branch = "polkadot-v0.9.42-tag-v0.14.0" }
teerex-primitives = { git = "https://github.com/integritee-network/pallets.git", branch = "sdk-v0.12.0-polkadot-v0.9.42" }

# Substrate dependencies
frame-support = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
pallet-balances = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-consensus-grandpa = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-core = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-keyring = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-runtime = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }

[features]
default = []
evm = []
sidechain = ["itp-settings/sidechain"]
offchain-worker = ["itp-settings/offchain-worker"]
production = ["itp-settings/production"]
teeracle = ["itp-settings/teeracle"]
dcap = []
attesteer = ["dcap"]
# Must be enabled to build a binary and link it with the enclave successfully.
# This flag is set in the makefile.
#
# Must not be enabled to run cargo test without an sgx-sdk providing environment
# https://github.com/rust-lang/cargo/issues/2549.
#
# It has been chosen to not make this a default feature because this makes test execution
# more ergonomic as we can simply do `cargo test` on the whole workspace like this.
link-binary = [
    "itp-enclave-api/implement-ffi",
]

[dev-dependencies]
# crates.io
anyhow = "1.0.40"
mockall = "0.11"
# local
itc-parentchain-test = { path = "../core/parentchain/test" }
its-peer-fetch = { path = "../sidechain/peer-fetch", features = ["mocks"] }
its-test = { path = "../sidechain/test" }
